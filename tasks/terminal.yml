- name: Install terminal/shell packages
  ansible.builtin.apt: 
    name: 
      - zsh
      - fonts-powerline
      - ripgrep
      - bat
      - thunar
      - polybar
      - ca-certificates
      - curl
      - gnupg
      - pipx
      #- lsd

- name: Fetch lsd releases
  ansible.builtin.uri:
    url: https://api.github.com/repos/lsd-rs/lsd/releases/latest
    return_content: true
  register: lsd_releases

- name: Install last lsd version
  ansible.builtin.apt:
    deb: "{{ lsd_releases.json | json_query('assets[?starts_with(name, `lsd_`)].browser_download_url') | json_query('[?ends_with(@, `amd64.deb`)]') | first }}"

- name: Fetch oh-my-zsh
  ansible.builtin.uri:
    url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    return_content: yes
  register: ohmyzsh_installer

- name: Install oh-my-zsh
  ansible.builtin.command:
    cmd: sh -s
    stdin: "{{ ohmyzsh_installer.content }}"
    creates: "/home/{{ username }}/.oh-my-zsh"
  become_user: "{{ username }}"

- name: Install PowerLevel10k
  ansible.builtin.git:
    repo: https://github.com/romkatv/powerlevel10k.git 
    dest: "/home/{{ username }}/.oh-my-zsh/custom/themes/powerlevel10k"
    depth: 1
    force: yes
  become_user: "{{ username }}"

- name: Install zsh plugins
  ansible.builtin.git:
    repo: https://github.com/zsh-users/{{ item }}.git 
    dest: "/home/{{ username }}/.oh-my-zsh/custom/plugins/{{ item }}"
    depth: 1
    force: yes
  become_user: "{{ username }}"
  loop:
    - zsh-autosuggestions
    - zsh-syntax-highlighting

- name: Ensures font directory exists
  ansible.builtin.file:
    path: "/home/{{ username }}/.local/share/fonts"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Install font
  ansible.builtin.get_url:
    url: "https://github.com/ryanoasis/nerd-fonts/raw/HEAD/patched-fonts/CodeNewRoman/{{ item }}"
    dest: "/home/{{ username }}/.local/share/fonts"
    owner: "{{ username }}"
    group: "{{ username }}"
  loop:
    - Bold/CodeNewRomanNerdFontMono-Bold.otf
    - Regular/CodeNewRomanNerdFontMono-Regular.otf

- name: Copy configuration files
  ansible.builtin.copy: 
    src: files/
    dest: "/home/{{ username }}/"
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Set exec permissions to polybar script
  ansible.builtin.file:
    path: "/home/{{ username }}/.config/polybar/launch.sh"
    mode: +x

- name: Fetch kitty
  ansible.builtin.uri:
    url: https://sw.kovidgoyal.net/kitty/installer.sh
    return_content: yes
  register: kitty_installer

- name: Install kitty
  ansible.builtin.command:
    cmd: sh -s
    stdin: "{{ kitty_installer.content }}"
    creates: "/home/{{ username }}/.local/kitty.app"
  become_user: "{{ username }}"

- name: Ensures required directories exist
  ansible.builtin.file:
    path: "/home/{{ username }}/.local/{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
  loop:
    - bin
    - share/applications

- name: Add kitty to PATH (symlink)
  ansible.builtin.file:
    src: "/home/{{ username }}/.local/kitty.app/bin/{{ item }}"
    dest: "/home/{{ username }}/.local/bin/{{ item }}"
    state: link
  loop:
    - kitty
    - kitten

- name: Place kitty desktop
  ansible.builtin.copy:
    src: "/home/{{ username }}/.local/kitty.app/share/applications/kitty.desktop"
    dest: "/home/{{ username }}/.local/share/applications/kitty.desktop"
    remote_src: true
    owner: "{{ username }}"
    group: "{{ username }}"

# Maybe I should add a condition to skip the nodejs installation if it is already present
- name: Fetch nodejs
  ansible.builtin.uri:
    url: https://install-node.vercel.app/lts
    return_content: yes
  register: nodejs_installer

- name: Install nodejs
  ansible.builtin.command:
    cmd: "bash -s -- --yes"
    stdin: "{{ nodejs_installer.content }}"
